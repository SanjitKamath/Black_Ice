from flask import Flask, request, jsonify
import numpy as np
import joblib
from tensorflow.keras.models import load_model
from pyngrok import ngrok  # Import pyngrok to create the tunnel

app = Flask(__name__)

# Load pre-trained model and scaler
model = load_model('malware_classifier_parquet.h5')
scaler = joblib.load('scaler.save')

# Define the list of all feature names
all_features = [f"feature{i}" for i in range(1, 2382)]  # Adjust number of features if necessary

@app.route('/')
def home():
    return "Welcome to the Malware Classifier API!"

@app.route('/predict', methods=['POST'])
def predict():
    try:
        data = request.get_json()

        # Fill missing features with 0
        features = [data.get(f"feature{i}", 0) for i in range(1, 2382)]
        features = np.array(features).reshape(1, -1)

        # Scale and predict
        features = scaler.transform(features)
        prediction = model.predict(features)
        score = prediction[0][0].item()

        # Classify
        label = "malware" if score >= 0.5 else "benign"

        return jsonify({
            "prediction_score": score,
            "classification": label
        })

    except Exception as e:
        return jsonify({"error": str(e)}), 400


if __name__ == '__main__':
    # Open a ngrok tunnel to the Flask app
    public_url = ngrok.connect(5000)
    print(f"Flask app is available at: {public_url}")
    
    # Start the Flask app
    app.run(debug=False, use_reloader=False)
